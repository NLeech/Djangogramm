# Django secret key, example of how to create: https://www.educative.io/answers/how-to-generate-a-django-secretkey
SECRET_KEY=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# Django superuser password for automatic superuser generation
SUPERUSER_PASSWORD=django_superuser_strong_password

# Postgres database credentials
PG_DATABASE=djangogramm
PG_USER=db_user
PG_PASSWD=dbuser_strong_password
PG_DATABASE_ADDRESS=127.0.0.1
PG_DATABASE_PORT=5432
# Postgres superuser (postgres) password for DB image creation
POSTGRES_PASSWORD=postgres_admin_user_strong_password

# Cloudinary credentials, see your cloudinary dashboard
ENV_CLOUD_NAME=xxxxxxxxx
ENV_CLOUD_API_KEY=123456789012345
ENV_CLOUD_API_SECRET=XXXXXXXXXXXXXXXXXXXXXXXXXXX

# Credentials for email sending
EMAIL_USE_TLS=True
EMAIL_HOST=smtp.gmail.com
EMAIL_HOST_USER=example_user@gmail.com
EMAIL_HOST_PASSWORD=XXXXXXXXXXXXXXXX
EMAIL_PORT=587

# credentials for google authentication,
# please see: https://python-social-auth.readthedocs.io/en/latest/backends/google.html#google-oauth2
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# credentials for github authentication,
# please see: https://python-social-auth.readthedocs.io/en/latest/backends/github.html#github-apps
SOCIAL_AUTH_GITHUB_KEY=XXXXXXXXXXXXXXXXXXXX
SOCIAL_AUTH_GITHUB_SECRET=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX